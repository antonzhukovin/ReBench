{"data":[{"runId":{"benchmark":{"name":"Bench1","runDetails":{"warmup":13,"minIterationTime":50,"maxInvocationTime":-1},"suite":{"name":"Suite","executor":{"name":"TestRunner1","desc":null},"desc":null}},"cores":1,"inputSize":null,"varValue":null,"machine":null,"extraArgs":null,"cmdline":"/Users/antonzukovin/PycharmProjects/ReBench/rebench/tests/perf/issue_15_vm.py TestBenchMarks Bench1 13","location":"/Users/antonzukovin/PycharmProjects/ReBench/rebench/tests/perf"},"p":[{"d":[{"p":7.2,"m":"MessageSendNode$AbstractMessageSendNode_evaluateArguments","t":[{"p":6.87,"m":"MessageSendNode$AbstractMessageSendNode_evaluateArguments","t":["MessageSendNode$AbstractMessageSendNode_executeGeneric","EagerBinaryPrimitiveNode_executeGeneric","ExpressionNode_executeLong","LocalVariableNodeFactory$LocalVariableWriteNodeGen_executeGeneric_long1","LocalVariableNodeFactory$LocalVariableWriteNodeGen_executeGeneric","IntToDoInlinedLiteralsNode_doLooping","IntToDoInlinedLiteralsNode_doIntToDo",{"p":6.82,"m":"IntToDoInlinedLiteralsNodeFactory$IntToDoInlinedLiteralsNodeGen_executeGeneric_long_long0","t":["IntToDoInlinedLiteralsNodeFactory$IntToDoInlinedLiteralsNodeGen_executeGeneric","SequenceNode_executeAllButLast","SequenceNode_executeGeneric","Invokable_execute","OptimizedCallTarget_executeRootNode",{"p":3.13,"m":"OptimizedCallTarget_profiledPERoot","t":["OptimizedCallTarget_callBoundary","SubstrateOptimizedCallTarget_doInvoke","OptimizedCallTarget_callDirect","OptimizedDirectCallNode_call",{"p":3.06,"m":"CachedDispatchNode_executeDispatch","t":[{"p":1.72,"m":"MessageSendNode$GenericMessageSendNode_doPreEvaluated","t":["MessageSendNode$AbstractMessageSendNode_executeGeneric","MessageSendNode$AbstractMessageSendNode_evaluateArguments","MessageSendNode$AbstractMessageSendNode_executeGeneric"]}]}]}]}]}]},{"p":0.68,"m":"Math_addExact","t":["Math_addExact","AdditionPrimFactory$AdditionPrimNodeGen_executeEvaluated","EagerBinaryPrimitiveNode_executeEvaluated","EagerBinaryPrimitiveNode_executeGeneric","ExpressionNode_executeLong","LocalVariableNodeFactory$LocalVariableWriteNodeGen_executeGeneric_long1","LocalVariableNodeFactory$LocalVariableWriteNodeGen_executeGeneric","IntToDoInlinedLiteralsNode_doLooping","IntToDoInlinedLiteralsNode_doIntToDo",{"p":0.65,"m":"IntToDoInlinedLiteralsNodeFactory$IntToDoInlinedLiteralsNodeGen_executeGeneric_long_long0","t":["IntToDoInlinedLiteralsNodeFactory$IntToDoInlinedLiteralsNodeGen_executeGeneric","SequenceNode_executeAllButLast","SequenceNode_executeGeneric","Invokable_execute","OptimizedCallTarget_executeRootNode"]}]},{"p":0.37,"m":"HeapChunkProvider_resetAlignedHeapChunk"},{"p":0.37,"m":"native_irq_return_iret"},{"p":0.32,"m":"clear_page_erms"},{"p":0.0,"m":"native_apic_msr_write"},{"p":0.0,"m":"native_apic_msr_write"},{"p":0.0,"m":"intel_bts_enable_local"},{"p":0.0,"m":"intel_pmu_handle_irq"},{"p":0.0,"m":"intel_pmu_handle_irq"}],"nit":1,"in":1}]}],"env":{"hostName":"test","userName":"test"},"startTime":null,"source":{"repoURL":"http://repo.git","branchOrTag":"master","commitId":"1de0e22fb3e9578b3aeb7a994481ead300fa977f","commitMsg":"Make the output for the current benchmark that's running more compact (#237)\n\n","authorName":"Stefan Marr","committerName":"GitHub","authorEmail":"git@stefan-marr.de","committerEmail":"noreply@github.com"},"projectName":"Persistency Test","experimentName":"Test"}